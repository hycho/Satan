Chapter02 내용
* 변화하는 요구사항에 대응
* 동작 파라미터화 (behavior parameterization)
* 익명 클래스
* 람다 표신식 미리보기
* 에제 : Comparator, Runnable, GUI


!변하는 고객의 요구사항 대응 방안!
# 비슷한 코드를 구현한 다음에 추상화 하여라

Predicate : 참거짓(boolean)을 반환 하는 함수를 뜻한다.

이번장에선 다음과 같은 내용을 익혀야 한다.
# 동작 파라미터화에서는 메서드 내부적으로 다양한 동작을 수행할 수 있도록 코드를 메서드 인수로 전달한다.
# 동작 파라미터화를 이용하면 변화하는 요구사항에 더 잘 대응할 수 있는 코드를 구현할 수 있다.
# 코드 전달 기법을 이용하면 동작을 메서드의 인수로 전달할 수 잇다. 람다식을 사용하기 이전에는 구현 클래스 또는 익명 클래스를 통해서 구현을 해왓다.
# 하지만 은근 불필요한 코드가 많아 진다. 그래서 나온게 람다 표현식이다.
# Java.util.Comparator, java.lang.Runnable등 Java Api를 통해 다양한 동작을 파라메터로 넘겨서 처리 할 수 잇다.