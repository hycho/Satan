# 스트림 활용.
 - 필터링, 슬라이싱, 매칭에 관해서 알아본다.
 - 검색, 매칭, 리듀싱에 관해서 알아본다.
 - 특정 범위의 숫자와 같은 숫자 스트림 사용.
 - 다중 소스로부터 스트림 만들기
 - 무한스트림에 관해 알아본다.
 
# 필터링과 슬라이싱
 - 필터링 : 스트림 요소를 선택하는 방법
 - 슬라이싱 : 원하는 데이터로 축소 시키는 방법
 
(1) 프리디케이트(predicate)로 필터링 하기
List<Dish> vegetarianMenu = 
	menu.stream()
	.filter(Dish::isVegetarian) // isVegetarian은 boolean을 리턴
	.collect(toList());
	
(2) 고유 요소 필터링
List<Integer> numbers = Arrays.asList(1, 2, 1, 3, 3, 2, 4);
numbers.stream()
	.filter(i-> i % 2 == 0)
	.distinct()	//distinct를 통해서 중복된 데이터를 배재
	.forEach(System.out::println);
	
(3) 스트림 축소
List<Dish> dishes = 
	menu.stream()
	.limit(3)	//limit을 통해서 3개의 요소를 제외한 나머지 요소를 축소 한다.
	.collect(toList());
						
(4) 요소 건너뛰기
List<Dish> dishes = 
	menu.stream()
	.filter(d->d.getCalories() > 300)
	.skip(2)	//skip을 통해서 2건을 건너뛴다.
	.collect(toList());